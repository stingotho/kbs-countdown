{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\kbs-countdown\\\\src\\\\components\\\\CountdownTimer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Snowflake from \"./Snowflake\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountdownTimer = () => {\n  _s();\n  // Function to calculate time left until the event\n  const calculateTimeLeft = () => {\n    const targetDate = new Date(\"December 14, 2023 00:00:00\").getTime();\n    const now = new Date().getTime();\n    const distance = targetDate - now;\n    if (distance > 0) {\n      return {\n        days: Math.floor(distance / (1000 * 60 * 60 * 24)),\n        hours: Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)),\n        minutes: Math.floor(distance % (1000 * 60 * 60) / (1000 * 60)),\n        seconds: Math.floor(distance % (1000 * 60) / 1000)\n      };\n    }\n    return {};\n  };\n\n  // Initialize the state\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n  const [score, setScore] = useState(0);\n  const [snowflakes, setSnowflakes] = useState([]);\n  useEffect(() => {\n    // Snowflakes initialization\n    const initialSnowflakes = Array.from({\n      length: 50\n    }, (_, id) => {\n      return {\n        id,\n        left: Math.random() * 100,\n        duration: 5 + Math.random() * 10,\n        delay: -Math.random() * 5,\n        // Negative delay for an immediate but staggered start\n        isVisible: true\n      };\n    });\n    setSnowflakes(initialSnowflakes);\n\n    // Countdown timer update\n    const interval = setInterval(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n\n    // Clean up interval\n    return () => clearInterval(interval);\n  }, []);\n\n  // Handle snowflake click\n  const handleSnowflakeClick = id => {\n    setScore(prevScore => prevScore + 1);\n    setSnowflakes(prevSnowflakes => prevSnowflakes.map(snowflake => snowflake.id === id ? {\n      ...snowflake,\n      isVisible: false\n    } : snowflake));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"custom-font\",\n      children: \"\\u2744\\uFE0FKBS Winter Break!\\u2744\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-font-timer\",\n      children: Object.keys(timeLeft).length > 0 ? Object.entries(timeLeft).map(([unit, value]) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [value, \" \", unit, \" \"]\n      }, unit, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Event has started!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: \"10px\"\n      },\n      children: \"Click on the snowflakes to increase your score!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: \"12px\"\n      },\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), snowflakes.map(snowflake => snowflake.isVisible && /*#__PURE__*/_jsxDEV(Snowflake, {\n      ...snowflake,\n      onClick: () => handleSnowflakeClick(snowflake.id)\n    }, snowflake.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(CountdownTimer, \"a8nxEwzgFOyNX+/eSPAmqdKWn2g=\");\n_c = CountdownTimer;\nexport default CountdownTimer;\nvar _c;\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"names":["React","useState","useEffect","Snowflake","jsxDEV","_jsxDEV","CountdownTimer","_s","calculateTimeLeft","targetDate","Date","getTime","now","distance","days","Math","floor","hours","minutes","seconds","timeLeft","setTimeLeft","score","setScore","snowflakes","setSnowflakes","initialSnowflakes","Array","from","length","_","id","left","random","duration","delay","isVisible","interval","setInterval","clearInterval","handleSnowflakeClick","prevScore","prevSnowflakes","map","snowflake","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","entries","unit","value","style","fontSize","onClick","_c","$RefreshReg$"],"sources":["D:/Projects/kbs-countdown/src/components/CountdownTimer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Snowflake from \"./Snowflake\";\r\n\r\nconst CountdownTimer = () => {\r\n  // Function to calculate time left until the event\r\n  const calculateTimeLeft = () => {\r\n    const targetDate = new Date(\"December 14, 2023 00:00:00\").getTime();\r\n    const now = new Date().getTime();\r\n    const distance = targetDate - now;\r\n\r\n    if (distance > 0) {\r\n      return {\r\n        days: Math.floor(distance / (1000 * 60 * 60 * 24)),\r\n        hours: Math.floor(\r\n          (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n        ),\r\n        minutes: Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)),\r\n        seconds: Math.floor((distance % (1000 * 60)) / 1000),\r\n      };\r\n    }\r\n    return {};\r\n  };\r\n\r\n  // Initialize the state\r\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n  const [score, setScore] = useState(0);\r\n  const [snowflakes, setSnowflakes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Snowflakes initialization\r\n    const initialSnowflakes = Array.from({ length: 50 }, (_, id) => {\r\n      return {\r\n        id,\r\n        left: Math.random() * 100,\r\n        duration: 5 + Math.random() * 10,\r\n        delay: -Math.random() * 5, // Negative delay for an immediate but staggered start\r\n        isVisible: true,\r\n      };\r\n    });\r\n    setSnowflakes(initialSnowflakes);\r\n\r\n    // Countdown timer update\r\n    const interval = setInterval(() => {\r\n      setTimeLeft(calculateTimeLeft());\r\n    }, 1000);\r\n\r\n    // Clean up interval\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Handle snowflake click\r\n  const handleSnowflakeClick = (id) => {\r\n    setScore((prevScore) => prevScore + 1);\r\n    setSnowflakes((prevSnowflakes) =>\r\n      prevSnowflakes.map((snowflake) =>\r\n        snowflake.id === id ? { ...snowflake, isVisible: false } : snowflake\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"custom-font\">❄️KBS Winter Break!❄️</h1>\r\n      <div className=\"custom-font-timer\">\r\n        {Object.keys(timeLeft).length > 0 ? (\r\n          Object.entries(timeLeft).map(([unit, value]) => (\r\n            <span key={unit}>\r\n              {value} {unit}{\" \"}\r\n            </span>\r\n          ))\r\n        ) : (\r\n          <span>Event has started!</span>\r\n        )}\r\n      </div>\r\n      <p style={{ fontSize: \"10px\" }}>\r\n        Click on the snowflakes to increase your score!\r\n      </p>\r\n      <div style={{ fontSize: \"12px\" }}>Score: {score}</div>\r\n      {snowflakes.map(\r\n        (snowflake) =>\r\n          snowflake.isVisible && (\r\n            <Snowflake\r\n              key={snowflake.id}\r\n              {...snowflake}\r\n              onClick={() => handleSnowflakeClick(snowflake.id)}\r\n            />\r\n          )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountdownTimer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}