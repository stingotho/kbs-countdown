{"ast":null,"code":"var _jsxFileName = \"/home/othman/projects/kbs-countdown/kbs-countdown/src/components/CountdownTimer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Snowflake from './Snowflake';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountdownTimer = () => {\n  _s();\n  const [timeLeft, setTimeLeft] = useState( /* ... */);\n  const [score, setScore] = useState(0);\n  const [snowflakesVisibility, setSnowflakesVisibility] = useState(Array(50).fill(true)); // Visibility state for each snowflake\n\n  // ... existing countdown logic ...\n\n  const handleSnowflakeClick = () => {\n    setScore(prevScore => prevScore + 1);\n  };\n  const createSnowflakes = num => {\n    return Array.from({\n      length: num\n    }, (_, index) => {\n      const left = Math.random() * 100;\n      const animationDuration = 5 + Math.random() * 10;\n      const animationDelay = 0;\n      return /*#__PURE__*/_jsxDEV(Snowflake, {\n        id: index,\n        left: left,\n        duration: animationDuration,\n        delay: animationDelay,\n        onClick: handleSnowflakeClick\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this);\n    });\n  };\n  const snowflakes = createSnowflakes(50);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u2744\\uFE0FKBS Winter Break!\\u2744\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Click on the snowflakes to increase your score!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), snowflakes]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(CountdownTimer, \"7Um2Y97HZcFbssbx9JXVazRHsfQ=\");\n_c = CountdownTimer;\nexport default CountdownTimer;\nvar _c;\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"names":["React","useState","useEffect","Snowflake","jsxDEV","_jsxDEV","CountdownTimer","_s","timeLeft","setTimeLeft","score","setScore","snowflakesVisibility","setSnowflakesVisibility","Array","fill","handleSnowflakeClick","prevScore","createSnowflakes","num","from","length","_","index","left","Math","random","animationDuration","animationDelay","id","duration","delay","onClick","fileName","_jsxFileName","lineNumber","columnNumber","snowflakes","children","_c","$RefreshReg$"],"sources":["/home/othman/projects/kbs-countdown/kbs-countdown/src/components/CountdownTimer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Snowflake from './Snowflake';\n\nconst CountdownTimer = () => {\n    const [timeLeft, setTimeLeft] = useState(/* ... */);\n    const [score, setScore] = useState(0);\n    const [snowflakesVisibility, setSnowflakesVisibility] = useState(Array(50).fill(true)); // Visibility state for each snowflake\n\n\n    // ... existing countdown logic ...\n\n    const handleSnowflakeClick = () => {\n        setScore(prevScore => prevScore + 1);\n    };\n\n    const createSnowflakes = (num) => {\n        return Array.from({ length: num }, (_, index) => {\n            const left = Math.random() * 100;\n            const animationDuration = 5 + Math.random() * 10;\n            const animationDelay = 0;\n\n            return (\n                <Snowflake \n                    key={index} \n                    id={index} \n                    left={left} \n                    duration={animationDuration} \n                    delay={animationDelay} \n                    onClick={handleSnowflakeClick} \n                />\n            );\n        });\n    };\n\n    const snowflakes = createSnowflakes(50);\n\n    return (\n        <div>\n            <h1>❄️KBS Winter Break!❄️</h1>\n            {/* Countdown display */}\n            <p>Click on the snowflakes to increase your score!</p>\n            <div>Score: {score}</div>\n            {snowflakes}\n        </div>\n    );\n};\n\nexport default CountdownTimer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAU,CAAT,UAAU;EACnD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACW,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGZ,QAAQ,CAACa,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;EAGxF;;EAEA,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IAC/BL,QAAQ,CAACM,SAAS,IAAIA,SAAS,GAAG,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,gBAAgB,GAAIC,GAAG,IAAK;IAC9B,OAAOL,KAAK,CAACM,IAAI,CAAC;MAAEC,MAAM,EAAEF;IAAI,CAAC,EAAE,CAACG,CAAC,EAAEC,KAAK,KAAK;MAC7C,MAAMC,IAAI,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;MAChC,MAAMC,iBAAiB,GAAG,CAAC,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE;MAChD,MAAME,cAAc,GAAG,CAAC;MAExB,oBACIvB,OAAA,CAACF,SAAS;QAEN0B,EAAE,EAAEN,KAAM;QACVC,IAAI,EAAEA,IAAK;QACXM,QAAQ,EAAEH,iBAAkB;QAC5BI,KAAK,EAAEH,cAAe;QACtBI,OAAO,EAAEhB;MAAqB,GALzBO,KAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMb,CAAC;IAEV,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,UAAU,GAAGnB,gBAAgB,CAAC,EAAE,CAAC;EAEvC,oBACIb,OAAA;IAAAiC,QAAA,gBACIjC,OAAA;MAAAiC,QAAA,EAAI;IAAqB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE9B/B,OAAA;MAAAiC,QAAA,EAAG;IAA+C;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACtD/B,OAAA;MAAAiC,QAAA,GAAK,SAAO,EAAC5B,KAAK;IAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACxBC,UAAU;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEd,CAAC;AAAC7B,EAAA,CA1CID,cAAc;AAAAiC,EAAA,GAAdjC,cAAc;AA4CpB,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}